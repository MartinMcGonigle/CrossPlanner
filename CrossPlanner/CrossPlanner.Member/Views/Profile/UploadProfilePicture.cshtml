@model UploadProfilePictureViewModel
@{
    ViewData["Title"] = "Upload Profile Picture";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<div class="row">
    <div class="col-md-12">
        <a asp-action="Index" asp-controller="Profile" class="btn btn-sm btn-secondary"><i class="fa fa-chevron-left" aria-hidden="true"></i> Go Back</a>
    </div>
</div>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-4 offset-md-4 text-center">
            <h3>Upload and Crop Profile Picture</h3>

            <div class="mb-3">
                <img id="profilePicturePreview"
                    src="@(Model.CurrentProfilePictureUrl ?? Url.Content("~/images/default-profile.png"))"
                    class="img-fluid mb-3 profile-picture"
                    alt="Profile Picture" />
            </div>

            <form id="uploadForm" enctype="multipart/form-data">
                <input type="hidden" id="ApplicationUserId" name="ApplicationUserId" value="@Model.ApplicationUserId" />

                <div class="mb-3">
                    <input type="file" id="profilePictureInput" name="profilePicture" accept="image/*" class="form-control" required />
                </div>

                <div class="mb-3">
                    <button type="button" class="btn btn-secondary" id="cropButton" style="display: none;">Crop & Preview</button>
                    <button type="button" class="btn btn-warning" id="editButton" style="display: none;">Edit Again</button>
                    <button type="button" class="btn btn-primary" id="uploadButton" style="display: none;">Upload Picture</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const profilePictureInput = document.getElementById("profilePictureInput");
        const profilePicturePreview = document.getElementById("profilePicturePreview");
        const cropButton = document.getElementById("cropButton");
        const editButton = document.getElementById("editButton");
        const uploadButton = document.getElementById("uploadButton");
        const applicationUserId = document.getElementById("ApplicationUserId").value;
        let cropper;

        profilePictureInput.addEventListener("change", function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    profilePicturePreview.src = e.target.result;
                    if (cropper) {
                        cropper.destroy();
                    }

                    cropper = new Cropper(profilePicturePreview, {
                        aspectRatio: 1,
                        viewMode: 1,
                        autoCropArea: 1,
                        movable: false,
                        zoomable: false,
                        cropBoxResizable: true,
                        cropBoxMovable: true,
                        ready() {
                            cropper.setCropBoxData({
                                width: 200,
                                height: 200
                            });
                        },
                        cropmove() {
                            const cropBoxData = cropper.getCropBoxData();
                            if (cropBoxData.width > 200 || cropBoxData.height > 200) {
                                cropper.setCropBoxData({
                                    width: 200,
                                    height: 200
                                });
                            }
                        }
                    });
                };
                reader.readAsDataURL(file);
                cropButton.style.display = "inline-block";
                uploadButton.style.display = "none";
                editButton.style.display = "none";
            }
        });

        cropButton.addEventListener("click", function () {
            if (!cropper) {
                alert("Please select an image to crop.");
                return;
            }

            cropper.imageSmoothingEnabled = true;
            const canvas = cropper.getCroppedCanvas({
                width: 200,
                height: 200,
                imageSmoothingQuality: "high",
            });

            profilePicturePreview.src = canvas.toDataURL("image/png");

            cropper.setDragMode("none");
            cropper.disable();

            canvas.toBlob((blob) => {
                if (blob.size > 1048576) { // 1MB = 1048576 bytes
                    alert("The image is too large. Please choose a smaller size.");
                    return;
                }

                const formData = new FormData();
                formData.append("profilePicture", blob, "profile.png");
                formData.append("ApplicationUserId", applicationUserId);

                uploadButton.onclick = function () {
                    fetch("@Url.Action("UploadProfilePicture")", {
                        method: "POST",
                        body: formData
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert(data.message);
                                location.reload();
                            } else {
                                alert(data.message);
                            }
                        })
                        .catch(error => console.error("Error:", error));
                };

                uploadButton.style.display = "inline-block";
                cropButton.style.display = "none";
                editButton.style.display = "inline-block";
            });
        });

        editButton.addEventListener("click", function () {
            if (cropper) {
                cropper.enable(); 
                cropper.setDragMode("crop"); 
                cropButton.style.display = "inline-block";
                uploadButton.style.display = "none";
                editButton.style.display = "none"; 
            }
        });

    });
</script>